// @flow
import getWindow from './getWindow';

<<<<<<< HEAD
declare function isElement(node: mixed): boolean %checks(node instanceof
  Element);
=======
/*:: declare function isElement(node: mixed): boolean %checks(node instanceof
  Element); */

>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f
function isElement(node) {
  const OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

<<<<<<< HEAD
declare function isHTMLElement(node: mixed): boolean %checks(node instanceof
  HTMLElement);
=======
/*:: declare function isHTMLElement(node: mixed): boolean %checks(node instanceof
  HTMLElement); */

>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f
function isHTMLElement(node) {
  const OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

<<<<<<< HEAD
declare function isShadowRoot(node: mixed): boolean %checks(node instanceof
  ShadowRoot);
function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }
=======
/*:: declare function isShadowRoot(node: mixed): boolean %checks(node instanceof
  ShadowRoot); */

function isShadowRoot(node) {
>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f
  const OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

export { isElement, isHTMLElement, isShadowRoot };
