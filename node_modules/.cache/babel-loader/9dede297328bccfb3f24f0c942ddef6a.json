{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geral\\\\Desktop\\\\REPOS\\\\PROYECTOFINAL\\\\proyectoFinalFrontEnd\\\\src\\\\components\\\\Code.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\nimport Highlight, { Prism } from 'prism-react-renderer';\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(props => {\n  _s();\n\n  const {\n    code = \"\",\n    language = \"jsx\"\n  } = props;\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const CodeStyling = ({\n    className,\n    style,\n    tokens,\n    getLineProps,\n    getTokenProps\n  }) => /*#__PURE__*/_jsxDEV(Card, {\n    className: \"position-relative pe-8 mb-2\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n        className: className,\n        style: style,\n        children: tokens.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", { ...getLineProps({\n            line,\n            key: i\n          }),\n          children: line.map((token, key) => /*#__PURE__*/_jsxDEV(\"span\", { ...getTokenProps({\n              token,\n              key\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), copied ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-success copy-code-text\",\n        children: \"Copied\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n        trigger: ['hover', 'focus'],\n        placement: \"top\",\n        overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n          children: \"Copy to clipboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: code,\n          onCopy: handleCopy,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            variant: \"primary\",\n            className: \"copy-code-button\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Highlight, {\n    Prism: Prism,\n    code: code,\n    language: language,\n    theme: themeStyle,\n    children: CodeStyling\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}, \"NE86rL3vg4NVcTTWDavsT0hUBJs=\");","map":{"version":3,"sources":["C:/Users/geral/Desktop/REPOS/PROYECTOFINAL/proyectoFinalFrontEnd/src/components/Code.js"],"names":["React","useState","CopyToClipboard","Card","Button","Tooltip","OverlayTrigger","Highlight","Prism","themeStyle","props","code","language","copied","setCopied","handleCopy","setTimeout","CodeStyling","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,cAAhC,QAAsD,6BAAtD;AACA,OAAOC,SAAP,IAAoBC,KAApB,QAAiC,sBAAjC;AAEA,OAAOC,UAAP,MAAuB,uCAAvB;;AAEA,kBAAgBC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA,IAAI,GAAG,EAAT;AAAaC,IAAAA,QAAQ,GAAG;AAAxB,MAAkCF,KAAxC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMc,UAAU,GAAG,MAAM;AACvBD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,UAAU,CAAC,MAAMF,SAAS,CAAC,KAAD,CAAhB,EAAyB,IAAzB,CAAV;AACD,GAHD;;AAKA,QAAMG,WAAW,GAAG,CAAC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,MAApB;AAA4BC,IAAAA,YAA5B;AAA0CC,IAAAA;AAA1C,GAAD,kBAClB,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEJ,SAAhB;AAA2B,QAAA,KAAK,EAAEC,KAAlC;AAAA,kBACGC,MAAM,CAACG,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACV,oBAASJ,YAAY,CAAC;AAAEG,YAAAA,IAAF;AAAQE,YAAAA,GAAG,EAAED;AAAb,WAAD,CAArB;AAAA,oBACGD,IAAI,CAACD,GAAL,CAAS,CAACI,KAAD,EAAQD,GAAR,kBAAgB,qBAAUJ,aAAa,CAAC;AAAEK,cAAAA,KAAF;AAASD,cAAAA;AAAT,aAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAAzB;AADH;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,EASGb,MAAM,gBAAG;AAAM,QAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAAiE,IAT1E,eAWE,QAAC,cAAD;AACE,QAAA,OAAO,EAAE,CAAC,OAAD,EAAU,OAAV,CADX;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHX;AAAA,+BAKE,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEF,IAAvB;AAA6B,UAAA,MAAM,EAAEI,UAArC;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,IAAb;AAAkB,YAAA,OAAO,EAAC,SAA1B;AAAoC,YAAA,SAAS,EAAC,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AA0BA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAEP,KAAlB;AAAyB,IAAA,IAAI,EAAEG,IAA/B;AAAqC,IAAA,QAAQ,EAAEC,QAA/C;AAAyD,IAAA,KAAK,EAAEH,UAAhE;AAAA,cACGQ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCD","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\r\nimport Highlight, { Prism } from 'prism-react-renderer';\r\n\r\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\r\n\r\nexport default (props) => {\r\n  const { code = \"\", language = \"jsx\" } = props;\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = () => {\r\n    setCopied(true);\r\n    setTimeout(() => setCopied(false), 2000);\r\n  };\r\n\r\n  const CodeStyling = ({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n    <Card className=\"position-relative pe-8 mb-2\">\r\n      <Card.Body>\r\n        <pre className={className} style={style}>\r\n          {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n              {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\r\n            </div>\r\n          ))}\r\n        </pre>\r\n\r\n        {copied ? <span className=\"text-success copy-code-text\">Copied</span> : null}\r\n\r\n        <OverlayTrigger\r\n          trigger={['hover', 'focus']}\r\n          placement=\"top\"\r\n          overlay={<Tooltip>Copy to clipboard</Tooltip>}\r\n        >\r\n          <CopyToClipboard text={code} onCopy={handleCopy}>\r\n            <Button size=\"sm\" variant=\"primary\" className=\"copy-code-button\">Copy</Button>\r\n          </CopyToClipboard>\r\n        </OverlayTrigger>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Highlight Prism={Prism} code={code} language={language} theme={themeStyle}>\r\n      {CodeStyling}\r\n    </Highlight>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}