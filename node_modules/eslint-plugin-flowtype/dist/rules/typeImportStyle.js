<<<<<<< HEAD
'use strict';
=======
"use strict";
>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f

Object.defineProperty(exports, "__esModule", {
  value: true
});
<<<<<<< HEAD
var schema = [{
=======
exports.default = void 0;
const schema = [{
>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f
  enum: ['declaration', 'identifier'],
  type: 'string'
}, {
  additionalProperties: false,
  properties: {
    ignoreTypeDefault: {
      type: 'boolean'
    }
  },
  type: 'object'
}];

<<<<<<< HEAD
var create = function create(context) {
=======
const create = context => {
>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f
  if (context.options[0] === 'declaration') {
    return {
      ImportDeclaration(node) {
        if (node.importKind !== 'type') {
<<<<<<< HEAD
          node.specifiers.forEach(function (specifier) {
=======
          node.specifiers.forEach(specifier => {
>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f
            if (specifier.importKind === 'type') {
              context.report({
                message: 'Unexpected type import',
                node
              });
            }
          });
        }
      }
<<<<<<< HEAD
    };
  } else {
    // Default to 'identifier'
    var ignoreTypeDefault = context.options[1] && context.options[1].ignoreTypeDefault;
    var isInsideDeclareModule = false;

=======

    };
  } else {
    // Default to 'identifier'
    const ignoreTypeDefault = context.options[1] && context.options[1].ignoreTypeDefault;
    let isInsideDeclareModule = false;
>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f
    return {
      DeclareModule() {
        isInsideDeclareModule = true;
      },
<<<<<<< HEAD
      'DeclareModule:exit'() {
        isInsideDeclareModule = false;
      },
      ImportDeclaration(node) {
        if (node.importKind !== 'type') {
          return;
        }

        // type specifiers are not allowed inside module declarations:
        // https://github.com/facebook/flow/issues/7609
=======

      'DeclareModule:exit'() {
        isInsideDeclareModule = false;
      },

      ImportDeclaration(node) {
        if (node.importKind !== 'type') {
          return;
        } // type specifiers are not allowed inside module declarations:
        // https://github.com/facebook/flow/issues/7609


>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f
        if (isInsideDeclareModule) {
          return;
        }

        if (ignoreTypeDefault && node.specifiers[0] && node.specifiers[0].type === 'ImportDefaultSpecifier') {
          return;
        }

        context.report({
          fix(fixer) {
<<<<<<< HEAD
            var imports = node.specifiers.map(function (specifier) {
=======
            const imports = node.specifiers.map(specifier => {
>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f
              if (specifier.type === 'ImportDefaultSpecifier') {
                return 'type default as ' + specifier.local.name;
              } else if (specifier.imported.name === specifier.local.name) {
                return 'type ' + specifier.local.name;
              } else {
                return 'type ' + specifier.imported.name + ' as ' + specifier.local.name;
              }
            });
<<<<<<< HEAD
            var source = node.source.value;

            return fixer.replaceText(node, 'import {' + imports.join(', ') + '} from \'' + source + '\';');
          },
=======
            const source = node.source.value;
            return fixer.replaceText(node, 'import {' + imports.join(', ') + '} from \'' + source + '\';');
          },

>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f
          message: 'Unexpected "import type"',
          node
        });
      }
<<<<<<< HEAD
=======

>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f
    };
  }
};

<<<<<<< HEAD
exports.default = {
  create,
  schema
};
=======
var _default = {
  create,
  meta: {
    fixable: 'code'
  },
  schema
};
exports.default = _default;
>>>>>>> b459a022f47e1c55fb538e6c6b01f47908ccd92f
module.exports = exports.default;